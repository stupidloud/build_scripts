name: libav

on: [push]

jobs:
  build:
    strategy:
      fail-fast: true
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install MSYS2
      run: choco install msys2 --no-progress
      
    - name: Build FFmpeg
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat" -arch=amd64 -host_arch=amd64
        set MSYS2_PATH_TYPE=inherit
        C:\tools\msys64\usr\bin\bash -lc "./ffmpeg_dll/prepare.sh -b"
        pushd .
        cd C:\
        dir /s /p mingw64.exe
        popd
        dir /s ffmpeg
      shell: cmd
      env:
        HOME: ${{ runner.workspace }}/build_scripts
    - uses: actions/upload-artifact@master
      name: Upload Artifact
      with:
        name: ffmpeg
        path: ffmpeg/install
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: ffmpeg
      - name: Zip
        run: 7z a ffmpeg.zip ffmpeg/
      - name: Create Build Number
        id: buildnumber
        uses: einaregilsson/build-number@v1 
        with: 
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ffmpeg/build/${{ steps.buildnumber.outputs.build_number }}
          release_name: ffmpeg build ${{ steps.buildnumber.outputs.build_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ffmpeg.zip
          asset_name: ffmpeg.zip
          asset_content_type: application/zip
